{"ast":null,"code":"const getAlbums = state => {\n  // could have used new ES7 optional chaining to make nicer\n  const songs = state && state.songs && state.songs.items || [];\n  const groupedByAlbums = groupBy(songs);\n  return {\n    albums: groupedByAlbums || [],\n    hasAlbums: groupedByAlbums && groupedByAlbums.length > 0\n  };\n};\n\nconst groupBy = songs => {\n  let helper = {}; // Using reduce to avoid mutating items\n\n  return songs.reduce((reducer, current) => {\n    var key = \"\".concat(current.band, \" - \").concat(current.album); //Group by album with songs\n\n    if (!helper[key]) {\n      helper[key] = Object.assign({}, current);\n      (helper[key].songs = []).push(current.song); // remove individual song from top level property\n\n      delete helper[key].song;\n      reducer.push(helper[key]);\n    } else {\n      helper[key].songs.push(current.song);\n    }\n\n    return reducer;\n  }, []);\n};\n\nexport default getAlbums;","map":{"version":3,"sources":["/Users/j.jones/Code/pirum-react-test/src/state/selectors/getAlbums.js"],"names":["getAlbums","state","songs","items","groupedByAlbums","groupBy","albums","hasAlbums","length","helper","reduce","reducer","current","key","band","album","Object","assign","push","song"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,KAAK,IAAI;AAEvB;AACA,QAAMC,KAAK,GAAGD,KAAK,IAAIA,KAAK,CAACC,KAAf,IAAwBD,KAAK,CAACC,KAAN,CAAYC,KAApC,IAA6C,EAA3D;AACA,QAAMC,eAAe,GAAGC,OAAO,CAACH,KAAD,CAA/B;AAEA,SAAO;AACHI,IAAAA,MAAM,EAAEF,eAAe,IAAI,EADxB;AAEHG,IAAAA,SAAS,EAAEH,eAAe,IAAIA,eAAe,CAACI,MAAhB,GAAyB;AAFpD,GAAP;AAIH,CAVD;;AAYA,MAAMH,OAAO,GAAGH,KAAK,IAAI;AACvB,MAAIO,MAAM,GAAG,EAAb,CADuB,CAGvB;;AACA,SAAOP,KAAK,CAACQ,MAAN,CAAa,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACxC,QAAIC,GAAG,aAAMD,OAAO,CAACE,IAAd,gBAAwBF,OAAO,CAACG,KAAhC,CAAP,CADwC,CAGxC;;AACA,QAAG,CAACN,MAAM,CAACI,GAAD,CAAV,EAAiB;AACfJ,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,OAAlB,CAAd;AACA,OAACH,MAAM,CAACI,GAAD,CAAN,CAAYX,KAAZ,GAAoB,EAArB,EAAyBgB,IAAzB,CAA8BN,OAAO,CAACO,IAAtC,EAFe,CAIf;;AACA,aAAOV,MAAM,CAACI,GAAD,CAAN,CAAYM,IAAnB;AACAR,MAAAA,OAAO,CAACO,IAAR,CAAaT,MAAM,CAACI,GAAD,CAAnB;AACD,KAPD,MAOO;AACLJ,MAAAA,MAAM,CAACI,GAAD,CAAN,CAAYX,KAAZ,CAAkBgB,IAAlB,CAAuBN,OAAO,CAACO,IAA/B;AACD;;AAED,WAAOR,OAAP;AACH,GAhBQ,EAgBN,EAhBM,CAAP;AAiBD,CArBD;;AAuBA,eAAeX,SAAf","sourcesContent":["const getAlbums = state => {\n\n    // could have used new ES7 optional chaining to make nicer\n    const songs = state && state.songs && state.songs.items || [];\n    const groupedByAlbums = groupBy(songs);\n\n    return { \n        albums: groupedByAlbums || [],\n        hasAlbums: groupedByAlbums && groupedByAlbums.length > 0\n    }\n};\n\nconst groupBy = songs => {\n  let helper = {};\n\n  // Using reduce to avoid mutating items\n  return songs.reduce((reducer, current) => {\n    var key = `${current.band} - ${current.album}`;\n\n    //Group by album with songs\n    if(!helper[key]) {\n      helper[key] = Object.assign({}, current);\n      (helper[key].songs = []).push(current.song);\n\n      // remove individual song from top level property\n      delete helper[key].song;\n      reducer.push(helper[key]);\n    } else {\n      helper[key].songs.push(current.song);\n    }\n\n    return reducer;\n}, []);\n}\n\nexport default getAlbums;\n"]},"metadata":{},"sourceType":"module"}