{"ast":null,"code":"import _defineProperty from \"/Users/j.jones/Code/pirum-react-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_SONGS_REQUEST, FETCH_SONGS_SUCCESS, FETCH_SONGS_ERROR } from '../constants/actionTypes';\nconst initialState = {\n  isFetching: false,\n  response: {},\n  error: null\n};\n\nconst songs = (state = initialState, {\n  type,\n  error,\n  response\n}) => {\n  switch (type) {\n    case FETCH_SONGS_REQUEST:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case FETCH_SONGS_SUCCESS:\n      return {\n        isFetching: false,\n        items: response.data,\n        error: null\n      };\n\n    case FETCH_SONGS_ERROR:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default songs;","map":{"version":3,"sources":["/Users/j.jones/Code/pirum-react-test/src/state/reducers/songs.js"],"names":["FETCH_SONGS_REQUEST","FETCH_SONGS_SUCCESS","FETCH_SONGS_ERROR","initialState","isFetching","response","error","songs","state","type","items","data"],"mappings":";;;;;;AAAA,SACIA,mBADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,QAIO,0BAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuB;AAAEM,EAAAA,IAAF;AAAQH,EAAAA,KAAR;AAAeD,EAAAA;AAAf,CAAvB,KAAqD;AAC/D,UAAQI,IAAR;AACI,SAAKT,mBAAL;AACI,+BACOQ,KADP;AAEIJ,QAAAA,UAAU,EAAE;AAFhB;;AAIJ,SAAKH,mBAAL;AACI,aAAO;AACHG,QAAAA,UAAU,EAAE,KADT;AAEHM,QAAAA,KAAK,EAAEL,QAAQ,CAACM,IAFb;AAGHL,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKJ,iBAAL;AACI,+BACOM,KADP;AAEIJ,QAAAA,UAAU,EAAE,KAFhB;AAGIE,QAAAA;AAHJ;;AAKJ;AACI,aAAOE,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,KAAf","sourcesContent":["import {\n    FETCH_SONGS_REQUEST,\n    FETCH_SONGS_SUCCESS,\n    FETCH_SONGS_ERROR\n} from '../constants/actionTypes';\n\nconst initialState = {\n    isFetching: false,\n    response: {},\n    error: null\n};\n\nconst songs = (state = initialState, { type, error, response }) => {\n    switch (type) {\n        case FETCH_SONGS_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case FETCH_SONGS_SUCCESS:\n            return {\n                isFetching: false,\n                items: response.data,\n                error: null\n            };\n        case FETCH_SONGS_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                error\n            };\n        default:\n            return state;\n    }\n};\n\nexport default songs;\n"]},"metadata":{},"sourceType":"module"}