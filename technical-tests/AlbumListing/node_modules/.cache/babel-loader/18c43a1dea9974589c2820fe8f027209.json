{"ast":null,"code":"var _jsxFileName = \"/Users/j.jones/Code/pirum-react-test/src/components/AlbumListing.js\";\nimport React, { useEffect } from 'react';\nimport fetchSongs from '../state/actions/fetchSongs';\nimport Album from './Album';\nimport withCollapse from './withCollapse';\nimport { useDispatch } from \"react-redux\";\n\nfunction AlbumListing(props) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchSongs());\n  }, []);\n  const hasAlbums = props.hasAlbums,\n        albums = props.albums;\n\n  if (!hasAlbums) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n  const items = albums.map((album, index) => {\n    const title = \"\".concat(album.band, \",  \").concat(album.album);\n    const AlbumWithCollapse = withCollapse(title, Album);\n    return React.createElement(AlbumWithCollapse, {\n      key: index,\n      band: album.band,\n      songs: album.songs,\n      album: album.album,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, items);\n}\n\nexport default AlbumListing;","map":{"version":3,"sources":["/Users/j.jones/Code/pirum-react-test/src/components/AlbumListing.js"],"names":["React","useEffect","fetchSongs","Album","withCollapse","useDispatch","AlbumListing","props","dispatch","hasAlbums","albums","items","map","album","index","title","band","AlbumWithCollapse","songs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAFyB,QAMjBO,SANiB,GAMKF,KANL,CAMjBE,SANiB;AAAA,QAMNC,MANM,GAMKH,KANL,CAMNG,MANM;;AAOzB,MAAI,CAACD,SAAL,EAAgB;AACd,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,QAAME,KAAK,GAAGD,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,UAAMC,KAAK,aAAMF,KAAK,CAACG,IAAZ,gBAAsBH,KAAK,CAACA,KAA5B,CAAX;AACA,UAAMI,iBAAiB,GAAGb,YAAY,CAACW,KAAD,EAAQZ,KAAR,CAAtC;AACA,WAAO,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAEW,KAAxB;AAA+B,MAAA,IAAI,EAAED,KAAK,CAACG,IAA3C;AAAiD,MAAA,KAAK,EAAEH,KAAK,CAACK,KAA9D;AAAqE,MAAA,KAAK,EAAEL,KAAK,CAACA,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAJa,CAAd;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,CADF;AAMH;;AAED,eAAeL,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport fetchSongs from '../state/actions/fetchSongs'\nimport Album from './Album'\nimport withCollapse from './withCollapse'\nimport { useDispatch } from \"react-redux\";\n\nfunction AlbumListing(props) {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(fetchSongs())\n    }, []);\n\n    const { hasAlbums, albums } = props;\n    if (!hasAlbums) {\n      return <div>Loading</div>;\n    }\n\n    const items = albums.map((album, index) => {\n      const title = `${album.band},  ${album.album}`;\n      const AlbumWithCollapse = withCollapse(title, Album);\n      return <AlbumWithCollapse key={index} band={album.band} songs={album.songs} album={album.album}/>\n    });\n\n    return (\n      <div>\n        {items}\n      </div>\n    );\n\n}\n\nexport default AlbumListing;"]},"metadata":{},"sourceType":"module"}