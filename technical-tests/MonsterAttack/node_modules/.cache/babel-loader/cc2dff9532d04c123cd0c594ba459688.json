{"ast":null,"code":"var _jsxFileName = \"/Users/j.jones/Code/robotwars/src/components/Game/Dashboard.tsx\";\nimport React, { Fragment } from 'react';\nimport styled from \"styled-components\";\nconst DashBoardPanel = styled.div`\n  text-align: center;\n  disaply: grid;\n`;\nconst Button = styled.button`\n  color: #fff;\n  text-transform: uppercase;\n  text-decoration: none;\n  background: #ed3330;\n  padding: 20px;\n  border-radius: 5px;\n  display: inline-block;\n  border: none;\n  transition: all 0.4s ease 0s;\n`;\nconst Message = styled.div`\n  padding-top: 5vh;\n  color: black:\n`;\nconst WinningMessage = styled.div`\n  color: green:\n`;\nconst LosingMessage = styled.div`\n  color: green:\n`;\n\nconst Dashboard = ({\n  attackClick,\n  gameStatus\n}) => {\n  console.log('gs', gameStatus);\n  const showButton = gameStatus && gameStatus === 0;\n  return React.createElement(DashBoardPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => attackClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Attack!\"), React.createElement(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://www.jondjones.com/frontend/react/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"JonDJones\"), \" \"), gameStatus === 1 && React.createElement(WinningMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Winner\"), gameStatus === 2 && React.createElement(LosingMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Loser\")));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/j.jones/Code/robotwars/src/components/Game/Dashboard.tsx"],"names":["React","Fragment","styled","DashBoardPanel","div","Button","button","Message","WinningMessage","LosingMessage","Dashboard","attackClick","gameStatus","console","log","showButton"],"mappings":";AAAA,OAAOA,KAAP,IAA+CC,QAA/C,QAA+D,OAA/D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAIA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI;;;CAAlC;AAKA,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;;;;;;;;;;CAA7B;AAYA,MAAMC,OAAO,GAAGL,MAAM,CAACE,GAAI;;;CAA3B;AAKA,MAAMI,cAAc,GAAGN,MAAM,CAACE,GAAI;;CAAlC;AAIA,MAAMK,aAAa,GAAGP,MAAM,CAACE,GAAI;;CAAjC;;AASA,MAAMM,SAA4C,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AAChFC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,UAAlB;AACA,QAAMG,UAAU,GAAGH,UAAU,IAAIA,UAAU,KAAK,CAAhD;AACA,SACA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMD,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU;AAAG,IAAA,IAAI,EAAC,2CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAV,MADF,EAEGC,UAAU,KAAK,CAAf,IAAoB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFvB,EAGGA,UAAU,KAAK,CAAf,IAAoB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHvB,CAFF,CADA;AAUF,CAbF;;AAeA,eAAeF,SAAf","sourcesContent":["import React, { FunctionComponent, useContext, Fragment } from 'react';\nimport styled from \"styled-components\"\nimport GameStateContext from '../../context/GameStateContext';\nimport GameStatus from '../../types/GameStatus'\n\nconst DashBoardPanel = styled.div`\n  text-align: center;\n  disaply: grid;\n`\n\nconst Button = styled.button`\n  color: #fff;\n  text-transform: uppercase;\n  text-decoration: none;\n  background: #ed3330;\n  padding: 20px;\n  border-radius: 5px;\n  display: inline-block;\n  border: none;\n  transition: all 0.4s ease 0s;\n`\n\nconst Message = styled.div`\n  padding-top: 5vh;\n  color: black:\n`\n\nconst WinningMessage = styled.div`\n  color: green:\n`\n\nconst LosingMessage = styled.div`\n  color: green:\n`\n\ninterface DashboardProps {\n  attackClick: Function,\n  gameStatus: GameStatus\n}\n\nconst Dashboard: FunctionComponent<DashboardProps> = ({attackClick, gameStatus}) => {\n    console.log('gs', gameStatus)\n    const showButton = gameStatus && gameStatus === 0;\n    return (\n    <DashBoardPanel>\n      <Button onClick={() => attackClick()}>Attack!</Button>\n      <Message>\n        <Fragment><a href=\"https://www.jondjones.com/frontend/react/\">JonDJones</a> </Fragment>\n        {gameStatus === 1 && <WinningMessage>Winner</WinningMessage>}\n        {gameStatus === 2 && <LosingMessage>Loser</LosingMessage>}\n      </Message>\n\n    </DashBoardPanel>\n)}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}