{"ast":null,"code":"import { diceDifference } from './dice';\nexport const calcauleScore = dice => {\n  if (!dice) return;\n  const playersScore = dice[0] + dice[1];\n  const monstersScore = dice[2] + dice[3];\n  console.log('currentPlayersHealth', playersScore);\n  console.log('currentMonsterHealth', monstersScore);\n  let result = {\n    playersScore,\n    monstersScore,\n    playersDamage: 0,\n    monstersDamage: 0\n  };\n\n  if (playersScore === monstersScore) {} else if (monstersScore > playersScore) {\n    result.playersDamage = diceDifference(playersScore, monstersScore);\n    console.log('Monster wins with ', result.playersDamage);\n  } else {\n    result.monstersDamage = diceDifference(playersScore, monstersScore);\n    console.log('Player wins with ', result.monstersDamage);\n  }\n\n  return result;\n};\nexport default calcauleScore;","map":{"version":3,"sources":["/Users/j.jones/Code/monsterWars/src/utils/score.ts"],"names":["diceDifference","calcauleScore","dice","playersScore","monstersScore","console","log","result","playersDamage","monstersDamage"],"mappings":"AACA,SAASA,cAAT,QAA+B,QAA/B;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAyB;AAElD,MAAI,CAACA,IAAL,EACI;AAEJ,QAAMC,YAAY,GAAGD,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAnC;AACA,QAAME,aAAa,GAAGF,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAApC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,YAApC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,aAApC;AAEA,MAAIG,MAAM,GAAG;AACTJ,IAAAA,YADS;AAETC,IAAAA,aAFS;AAGTI,IAAAA,aAAa,EAAG,CAHP;AAITC,IAAAA,cAAc,EAAG;AAJR,GAAb;;AAOA,MAAIN,YAAY,KAAKC,aAArB,EAAoC,CACnC,CADD,MACO,IAAIA,aAAa,GAAGD,YAApB,EAAkC;AACrCI,IAAAA,MAAM,CAACC,aAAP,GAAuBR,cAAc,CAACG,YAAD,EAAeC,aAAf,CAArC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,MAAM,CAACC,aAAzC;AACH,GAHM,MAGA;AACHD,IAAAA,MAAM,CAACE,cAAP,GAAwBT,cAAc,CAACG,YAAD,EAAeC,aAAf,CAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,MAAM,CAACE,cAAxC;AACH;;AAED,SAAOF,MAAP;AACH,CA5BM;AA8BP,eAAeN,aAAf","sourcesContent":["\nimport { diceDifference } from './dice';\n\nexport const calcauleScore = (dice: Array<number>) => {\n\n    if (!dice)\n        return;\n\n    const playersScore = dice[0] + dice[1];\n    const monstersScore = dice[2] + dice[3];\n\n    console.log('currentPlayersHealth', playersScore)\n    console.log('currentMonsterHealth', monstersScore)\n\n    let result = {\n        playersScore,\n        monstersScore,\n        playersDamage : 0,\n        monstersDamage : 0\n    }\n\n    if (playersScore === monstersScore) {\n    } else if (monstersScore > playersScore) {\n        result.playersDamage = diceDifference(playersScore, monstersScore)\n        console.log('Monster wins with ', result.playersDamage)\n    } else {\n        result.monstersDamage = diceDifference(playersScore, monstersScore)\n        console.log('Player wins with ', result.monstersDamage)\n    }\n\n    return result;\n}\n\nexport default calcauleScore;"]},"metadata":{},"sourceType":"module"}