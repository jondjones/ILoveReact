{"ast":null,"code":"var _jsxFileName = \"/Users/j.jones/Code/robotwars/src/components/Game/Dashboard.tsx\";\nimport React, { useContext } from 'react';\nimport styled from \"styled-components\";\nimport GameStateContext from '../../context/GameStateContext';\nimport GameStatus from './types/GameStatus';\nconst DashBoardPanel = styled.div`\n  text-align: center;\n`;\nconst Button = styled.button`\n  color: #fff;\n  text-transform: uppercase;\n  text-decoration: none;\n  background: #ed3330;\n  padding: 20px;\n  border-radius: 5px;\n  display: inline-block;\n  border: none;\n  transition: all 0.4s ease 0s;\n`;\nconst WinningMessage = styled.div`\n  color: green:\n`;\nconst LosingMessage = styled.div`\n  color: green:\n`;\n\nconst Dashboard = ({\n  attackClick\n}) => {\n  const {\n    gameStatus\n  } = useContext(GameStateContext);\n  return React.createElement(DashBoardPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, gameStatus === GameStatus.PlayerWin && React.createElement(WinningMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Winner\"), gameStatus === GameStatus.PlayerWin && React.createElement(LosingMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Loser\"), React.createElement(Button, {\n    onClick: () => attackClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Attack!\"));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/j.jones/Code/robotwars/src/components/Game/Dashboard.tsx"],"names":["React","useContext","styled","GameStateContext","GameStatus","DashBoardPanel","div","Button","button","WinningMessage","LosingMessage","Dashboard","attackClick","gameStatus","PlayerWin"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAI;;CAAlC;AAIA,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAO;;;;;;;;;;CAA7B;AAYA,MAAMC,cAAc,GAAGP,MAAM,CAACI,GAAI;;CAAlC;AAIA,MAAMI,aAAa,GAAGR,MAAM,CAACI,GAAI;;CAAjC;;AAQA,MAAMK,SAA4C,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAiBZ,UAAU,CAACE,gBAAD,CAAjC;AACA,SACA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,UAAU,KAAKT,UAAU,CAACU,SAA1B,IAAuC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD1C,EAEGD,UAAU,KAAKT,UAAU,CAACU,SAA1B,IAAuC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAF1C,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMF,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADA;AAMF,CARF;;AAUA,eAAeD,SAAf","sourcesContent":["import React, { FunctionComponent, useContext } from 'react';\nimport styled from \"styled-components\"\nimport GameStateContext from '../../context/GameStateContext';\nimport GameStatus from './types/GameStatus'\n\nconst DashBoardPanel = styled.div`\n  text-align: center;\n`\n\nconst Button = styled.button`\n  color: #fff;\n  text-transform: uppercase;\n  text-decoration: none;\n  background: #ed3330;\n  padding: 20px;\n  border-radius: 5px;\n  display: inline-block;\n  border: none;\n  transition: all 0.4s ease 0s;\n`\n\nconst WinningMessage = styled.div`\n  color: green:\n`\n\nconst LosingMessage = styled.div`\n  color: green:\n`\n\ninterface DashboardProps {\n  attackClick: Function\n}\n\nconst Dashboard: FunctionComponent<DashboardProps> = ({attackClick}) => {\n    const { gameStatus } = useContext(GameStateContext)\n    return (\n    <DashBoardPanel>\n      {gameStatus === GameStatus.PlayerWin && <WinningMessage>Winner</WinningMessage>}\n      {gameStatus === GameStatus.PlayerWin && <LosingMessage>Loser</LosingMessage>}\n      <Button onClick={() => attackClick()}>Attack!</Button>\n    </DashBoardPanel>\n)}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}